package driveghost;

import java.awt.Toolkit;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.SwingWorker;

/**
 *
 * @author Daniel Munkacsi
 */
public class GUI extends javax.swing.JFrame {
    private final DriveGhost ghost;
    /**
     * Creates new form GUI
     */
    public GUI() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println(ex.getMessage());
        }
        //</editor-fold>
        initComponents();
        ghost = new DriveGhost();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        selectSource = new javax.swing.JButton();
        selectDestination = new javax.swing.JButton();
        srcLoc = new javax.swing.JTextField();
        destLoc = new javax.swing.JTextField();
        numberOfFilesLabel = new javax.swing.JLabel();
        numberOfFiles = new javax.swing.JLabel();
        doGhost = new javax.swing.JButton();
        progress = new javax.swing.JProgressBar();

        fileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        selectSource.setText("Select drive");
        selectSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectSourceActionPerformed(evt);
            }
        });

        selectDestination.setText("Select ghost folder");
        selectDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDestinationActionPerformed(evt);
            }
        });

        srcLoc.setEditable(false);
        srcLoc.setColumns(20);
        srcLoc.setText("No source drive/folder selected.");

        destLoc.setEditable(false);
        destLoc.setColumns(20);
        destLoc.setText("No destination folder selected.");

        numberOfFilesLabel.setText("Number of files:");
        numberOfFilesLabel.setEnabled(false);
        numberOfFilesLabel.setVisible(false);

        numberOfFiles.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numberOfFiles.setText("counting...");
        numberOfFiles.setEnabled(false);
        numberOfFiles.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        numberOfFiles.setVisible(false);

        doGhost.setText("Ghost !");
        doGhost.setEnabled(false);
        doGhost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doGhostActionPerformed(evt);
            }
        });

        progress.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(doGhost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(numberOfFilesLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numberOfFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(srcLoc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectSource, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(destLoc)
                            .addComponent(selectDestination, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(selectSource, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(selectDestination, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srcLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfFilesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(doGhost, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("Drive Ghost");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void selectSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectSourceActionPerformed
        fileChooser.setEnabled(true);
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            ghost.setSource(selectedFile);
            srcLoc.setText(selectedFile.getAbsolutePath());
            
            numberOfFilesLabel.setEnabled(false);
            numberOfFilesLabel.setVisible(false);
            numberOfFiles.setEnabled(false);
            numberOfFiles.setVisible(false);
            numberOfFiles.setText(" counting...");
            progress.setValue(0);
            progress.setString(null);
        }
        fileChooser.setEnabled(false);
        if(ghost.getSource() != null && ghost.getDestination() != null) doGhost.setEnabled(true);
    }//GEN-LAST:event_selectSourceActionPerformed

    private void selectDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDestinationActionPerformed
        fileChooser.setEnabled(true);
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            ghost.setDestination(selectedFile);
            destLoc.setText(selectedFile.getAbsolutePath());
            progress.setValue(0);
            progress.setString(null);
        }
        fileChooser.setEnabled(false);
        if(ghost.getSource() != null && ghost.getDestination() != null) doGhost.setEnabled(true);
    }//GEN-LAST:event_selectDestinationActionPerformed

    private void doGhostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doGhostActionPerformed
        if(ghost.getSource() == null || ghost.getDestination() == null) return;
        
        doGhost.setEnabled(false);
        numberOfFilesLabel.setEnabled(true);
        numberOfFilesLabel.setVisible(true);
        numberOfFiles.setEnabled(true);
        numberOfFiles.setVisible(true);
        ghost.setProgressBar(progress);
        selectSource.setEnabled(false);
        selectDestination.setEnabled(false);
        SwingWorker ghoster;

        ghoster = new SwingWorker<Void, Integer>() {
            @Override
            protected Void doInBackground() {
                int fcount = ghost.getFileCount();
                numberOfFiles.setText(String.valueOf(fcount));
                ghost.createGhost();
                return null;
            }
            
            @Override
            protected void done(){
                doGhost.setEnabled(true);
                progress.setString("100% - Finished");
                Toolkit.getDefaultToolkit().beep();
                // write a file containing date of ghosting call it LIST MASTER:
                ghost.saveGhostInfo();
                ghost.reset();
                selectSource.setEnabled(true);
                selectDestination.setEnabled(true);
            }
        };
        ghoster.execute();
    }//GEN-LAST:event_doGhostActionPerformed

    public void run(){
        setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField destLoc;
    private javax.swing.JButton doGhost;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel numberOfFiles;
    private javax.swing.JLabel numberOfFilesLabel;
    private javax.swing.JProgressBar progress;
    private javax.swing.JButton selectDestination;
    private javax.swing.JButton selectSource;
    private javax.swing.JTextField srcLoc;
    // End of variables declaration//GEN-END:variables
}